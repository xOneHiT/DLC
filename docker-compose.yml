version: '3.8'

services:
  db:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_NAME}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    networks:
      - app-network
    volumes:
      - mysqldata:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  client:
    build:
      context: .
      dockerfile: client/Dockerfile
    ports:
      - "80:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  server:
    build:
      context: .
      dockerfile: server/Dockerfile
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      db:
        condition: service_healthy
      client:
        condition: service_started
    environment:
      DATABASE_URL: mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE_NAME}
      MYSQL_HOST: db
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE_NAME: ${MYSQL_DATABASE_NAME}
      MYSQL_PORT: 3306
    networks:
      - app-network
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  mysqldata:
